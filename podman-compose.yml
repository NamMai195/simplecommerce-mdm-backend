version: '3.8'

# Automatically load .env file for cross-platform compatibility
env_file:
  - .env

services:
  # PostgreSQL Database
  db:
    image: docker.io/postgres:16-alpine
    container_name: simplecommerce-db
    restart: unless-stopped
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - simplecommerce_data:/var/lib/postgresql/data:Z
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:Z
    networks:
      - simplecommerce-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application
  api:
    build:
      context: .
      dockerfile: Containerfile
      target: runtime
    container_name: ${COMPOSE_PROJECT_NAME}-api
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "${SERVER_PORT}:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=dev
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/${POSTGRES_DB}
      - SPRING_DATASOURCE_USERNAME=${POSTGRES_USER}
      - SPRING_DATASOURCE_PASSWORD=${POSTGRES_PASSWORD}
      - JAVA_OPTS=${JAVA_OPTS}
      - FRONTEND_URL=${FRONTEND_URL}
      - BREVO_API_KEY=${BREVO_API_KEY}
      - JWT_ACCESS_KEY=${JWT_ACCESS_KEY}
      - JWT_REFRESH_KEY=${JWT_REFRESH_KEY}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    volumes:
      - app_logs:/app/logs:Z
    networks:
      - simplecommerce-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Redis (for caching and sessions)
  redis:
    image: docker.io/redis:7-alpine
    container_name: simplecommerce-redis
    restart: unless-stopped
    env_file:
      - .env
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data:Z
    networks:
      - simplecommerce-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # pgAdmin (Database Management Tool)
  pgadmin:
    image: docker.io/dpage/pgadmin4:latest
    container_name: simplecommerce-pgadmin
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin:Z
    networks:
      - simplecommerce-network

volumes:
  simplecommerce_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  app_logs:
    driver: local

networks:
  simplecommerce-network:
    driver: bridge 