spring:
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    hikari:
      # Tối ưu cho free tier (0.5GB RAM) - GIẢM MEMORY
      maximum-pool-size: 3
      minimum-idle: 1
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 10
        order_inserts: true
        order_updates: true
        # Tối ưu memory
        jdbc.batch_versioned_data: true
        jdbc.batch.builder: legacy

  lifecycle:
    timeout-per-shutdown-phase: 30s

server:
  port: ${PORT:8080}
  forward-headers-strategy: native
  shutdown: graceful
  connection-timeout: 60000

logging:
  level:
    root: INFO
    com.simplecommerce_mdm: DEBUG
    org.springframework.security: INFO
    org.hibernate: INFO
    org.springframework.web: INFO
    org.springframework.boot: DEBUG
    com.zaxxer.hikari: DEBUG
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

management:
  endpoints:
    web:
      exposure:
        include: health,info,env,configprops
      base-path: /actuator
  endpoint:
    health:
      show-details: always
    info:
      enabled: true
  info:
    env:
      enabled: true

  # Tối ưu cho free tier
  task:
    execution:
      pool:
        core-size: 1
        max-size: 2
        queue-capacity: 5
  cache:
    type: none
  session:
    timeout: 30m

# JWT configurations
jwt:
  accessKey: ${JWT_SECRET_KEY}
  refreshKey: ${JWT_REFRESH_SECRET_KEY}
  expiryMinutes: ${JWT_EXPIRY_MINUTES:60}
  expiryDay: ${JWT_EXPIRY_DAY:7}

# Brevo Email Service
brevo:
  api-key: ${BREVO_API_KEY}
  sender:
    email: no-reply@simplecommerce.com
    name: SimpleCommerce MDM

# Cloudinary
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}

# Swagger
springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html

  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

# Additional Security Configuration
security:
  jwt:
    secret-key: ${JWT_SECRET_KEY}
    expiration: 86400000
    refresh-expiration: 604800000
