# DigitalOcean Production Configuration
# Optimized for 1GB RAM, 1 vCPU Droplet
spring:
  profiles:
    active: digitalocean
  
  # Database Configuration
  datasource:
    url: ${SPRING_DATASOURCE_URL}
    username: ${SPRING_DATASOURCE_USERNAME}
    password: ${SPRING_DATASOURCE_PASSWORD}
    driver-class-name: org.postgresql.Driver
    
    # HikariCP - Optimized for 1GB RAM
    hikari:
      maximum-pool-size: 8
      minimum-idle: 3
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        # Batch processing for better performance
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
        jdbc.batch_versioned_data: true
        
        # Optimized for limited memory
        connection:
          provider_disables_autocommit: true
        cache:
          use_second_level_cache: false
          use_query_cache: false

  # Task Execution - Limited for 1GB RAM
  task:
    execution:
      pool:
        core-size: 3
        max-size: 6
        queue-capacity: 50
        keep-alive: 60s

  # Cache - Disabled to save memory
  cache:
    type: none

  # Session timeout
  session:
    timeout: 30m

# Server Configuration
server:
  port: ${PORT:8080}
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
  
  # Connection timeouts
  servlet:
    session:
      timeout: 30m
  
  # Tomcat optimization for 1GB RAM
  tomcat:
    threads:
      max: 150
      min-spare: 10
    max-connections: 8192
    accept-count: 100
    connection-timeout: 20000

# Logging Configuration - Reduced for production
logging:
  level:
    root: WARN
    com.simplecommerce_mdm: INFO
    org.springframework.security: WARN
    org.hibernate: WARN
    org.springframework.web: WARN
    org.springframework.transaction: WARN
  
  # File logging with rotation
  file:
    name: /app/logs/application.log
  
  logback:
    rollingpolicy:
      max-file-size: 10MB
      max-history: 3

# Management endpoints - Limited for security
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: when-authorized

# Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET}
    access-token:
      expiration: 3600000  # 1 hour
    refresh-token:
      expiration: 86400000 # 24 hours

# OAuth2 Configuration (Google Login)
spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - email
              - profile

# Email Configuration (Brevo)
brevo:
  api:
    key: ${BREVO_API_KEY}
  sender:
    email: ${BREVO_SENDER_EMAIL}
    name: ${BREVO_SENDER_NAME}

# Cloudinary Configuration
cloudinary:
  cloud-name: ${CLOUDINARY_CLOUD_NAME}
  api-key: ${CLOUDINARY_API_KEY}
  api-secret: ${CLOUDINARY_API_SECRET}

# Swagger Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
